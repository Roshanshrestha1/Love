 
    // Language translations
    const translations = {
      en: {
        headerSubtitle: "A love story written in the stars тЬи",
        timerSubtitle: "ЁЯХ░я╕П Time since my heart started waiting for you",
        calculatorTitle: "ЁЯТХ Love Calculator ЁЯТХ",
        calculatorButton: "Calculate Love ЁЯТХ",
        name1Placeholder: "Enter first name",
        name2Placeholder: "Enter second name",
        quotesTitle: "ЁЯТн Love Quotes ЁЯТн",
        letterTitle: "ЁЯТМ Click the Letter ЁЯТМ",
        letterHeader: "ЁЯТЦ Letter From My Heart ЁЯТЦ",
        memoriesTitle: "ЁЯУ╕ Our Beautiful Memories",
        uploadTitle: "ЁЯУ╖ Add More Memories",
        uploadSubtitle: "Share more beautiful moments with us",
        uploadBtnText: "Upload Photos",
        footerText: "тЬи Made with infinite тЭдя╕П тАФ I'll wait one day longer than forever. тЬи",
        letterText: `Mero Mutu Ko Malika тЭдя╕ПЁЯМ╕

Timi sanga kura garna paune sujog aba mero lagi ekdam anmol jasto lagcha. Timi sanga ko har ek samjhana, har ek muskan, har ek sparshтАж sabai mero hriday ma gahiro lekha jasto cha. Maile timi lai dukha diyeko thiyo, yo kura mero man le hamesha samjhirahanchha. ЁЯШФЁЯТФ Timi le tyo bela ma jati sahera pani chup basyau, mero maya ma rahera, mero sabai mood, mero sabai galti tolerate garyo тАФ tara maile tyo appreciate garna sakina. Aba bujheko chu, timi kati thulo man ko ra kati pure soul ko manche thiyau bhanera.

Ma timi bina jindagi ko har din ekdam khali jasto cha. Ghar ta uhi ho, tara timi ko haso nabhayeko le yo ghar ekdam sunya jasto cha. ЁЯПбЁЯеА Maile timro chhaya ma dherai din bitaye, tara aba tyo chhaya mero aakhako agadi chaina. Aba ta timro awaz mero man ko geet jasto bajiracha, tara haat samatna sakdina. Timi sanga ko chhoto walk, cup of tea share garne bela, timro random text тАФ sabai mero lagi priceless thiyo, ani aba tyo sabai yaad le parkhi rahanu parcha.

Sanu, timi mero lagi sirf ek girlfriend hoina тАФ timi mero dost, mero pariwar, mero guru, mero sansar thiyau. ЁЯМПЁЯТЮ Aba maile timro importance bujheko chu. Aba maile mero attitude, mero ego, mero careless behavior lai side ma rakhera ekdam genuine, caring, loving manche baneko chu тАФ timro lagi. Aba maile har din Shiv ko agadi prarthana garchu ЁЯЩПЁЯХЙ ki timi ko mutu feri mero lagi khulcha ra timi feri mero haat samatna aauchau.

Ma timi lai yo jindagi ma pani feri paye, ma timi ko happiness lai mero happiness banaidinchu. Ma timi ko har ek dukha ko agadi aafai aunchu, timi lai protect garna. Ma promise garchu тАФ aba kahilyai timro aasu falne chaina. ЁЯТзЁЯд▓

Sanu, timro absence le malai bujhaayo тАФ maya sirf words hoina, action ho. Aba maile yo sabai sikheko chu. Aba timi sanga timi ko dream life banauchu, timi ko har sapana poora garna madat garchu. Timi ko haat samatne, timro aankha ma aankha milaera future imagine garne тАФ aba yo mero life ko sabai bhanda thulo goal ho.

Jaba taara dekchhu ЁЯММ, ma timro aankha yaad garchu. Jaba hawa chalchha ЁЯМмя╕П, timro muskan yaad garchu. Jaba surya uthchha ЁЯМЕ, timro warmth yaad garchu. Aba ta timro naam mero shwas ma basiraheko cha. Timi nai mero sapana ra timi nai mero satya.

Ma parkhi rahanchu, chahe din ho ya barsa. Ma parkhi rahanchu, chahe timi aauchau ya na aauchau. Tara ek kura ta yo mutu le kasam khayera bhaneko cha тАФ yedi timi kahile pani aaudaina bhane pani, ma mero jiwan timi ko yaad ma eklo bitauchhu, tara aru kunai keti lai kahile pani rojdina. ЁЯТФтП│ Yo maya sirf timro lagi ho, ani yo mutu sirf timro naam le dhadkincha.

Please, ek choti feri aaunu тАФ yo mutu le timro naam chhodna sakdaina. ЁЯе║ЁЯдН
Ma timi lai samjhiraheko chu, timro lagi prarthana garchu, ani mero maya le timi ko hriday feri chhuna sakos bhanera aasha garchu.

`
      },
      np: {
        headerSubtitle: "рддрд╛рд░рд╛рд╣рд░реВрдорд╛ рд▓реЗрдЦрд┐рдПрдХреЛ рдкреНрд░реЗрдо рдХрдерд╛ тЬи",
        timerSubtitle: "ЁЯХ░я╕П рдореЗрд░реЛ рдореБрдЯреБрд▓реЗ рддрдкрд╛рдИрдВрдХреЛ рд▓рд╛рдЧрд┐ рдХрддрд┐ рд╕рдордп рдХреБрд░реНрдиреБрднрдПрдХреЛ рдЫ",
        letterTitle: "ЁЯТМ рдЪрд┐рдареАрдорд╛ рдХреНрд▓рд┐рдХ рдЧрд░реНрдиреБрд╣реЛрд╕реН ЁЯТМ",
        letterHeader: "ЁЯТЦ рдореЗрд░реЛ рдореБрдЯреБрдмрд╛рдЯ рдЪрд┐рдареА ЁЯТЦ",
        memoriesTitle: "ЁЯУ╕ рд╣рд╛рдореНрд░реЛ рд╕реБрдиреНрджрд░ рд╕рдореНрдЭрдирд╛рд╣рд░реВ",
        uploadTitle: "ЁЯУ╖ рдердк рд╕рдореНрдЭрдирд╛рд╣рд░реВ рдердкреНрдиреБрд╣реЛрд╕реН",
        uploadSubtitle: "рд╣рд╛рдореАрд╕рдБрдЧ рдердк рд╕реБрдиреНрджрд░ рдХреНрд╖рдгрд╣рд░реВ рд╕рд╛рдЭрд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реН",
        uploadBtnText: "рддрд╕реНрд╡рд┐рд░рд╣рд░реВ рдЕрдкрд▓реЛрдб рдЧрд░реНрдиреБрд╣реЛрд╕реН",
        footerText: "тЬи рдЕрд╕реАрдорд┐рдд тЭдя╕П рд╕рдБрдЧ рдмрдирд╛рдЗрдПрдХреЛ тАФ рдо рдПрдХ рджрд┐рди рдзреЗрд░реИ рд▓рд╛рдореЛ рдХреБрд░реНрдиреЗрдЫреБред тЬи",
        letterText: `ЁЯР╝ЁЯжЬЁЯМ╣ рдо рддрдкрд╛рдИрдВрд▓рд╛рдИ рдЕрдЭреИ рдкрдирд┐ рдореБрдЯреБ рднрд░реА рдорд╛рдпрд╛ рдЧрд░реНрдЫреБред
рддрдкрд╛рдИрдВ рдореЗрд░реЛ рд╕рдВрд╕рд╛рд░ рд╣реБрдиреБрд╣реБрдиреНрдЫ...
ЁЯЩП рдореИрд▓реЗ рдЧрд░реЗрдХрд╛ рд╕рдмреИ рдЧрд▓реНрддреАрд╣рд░реВрдХреЛ рд▓рд╛рдЧрд┐ рдо рд╣реГрджрдпрдмрд╛рдЯ рдорд╛рдл рдорд╛рдЧреНрдЫреБред
рдо рддрдкрд╛рдИрдВрдХреЛ рдЦреБрд╢реАрдорд╛ рдЦреБрд╢реА рдордирд╛рддрд╛ рд╣реВрдБ...
ЁЯХпя╕П рдо рддрдкрд╛рдИрдВрд▓рд╛рдИ рдЬрд╕реНрддреЛ рдорд╛рдпрд╛ рдЧрд░реНрди рд╕рдХреНрдЫреБ...
ЁЯТЦ рдо рдЪрд╛рд╣рдиреНрдЫреБ рдПрдХ рджрд┐рди рддрдкрд╛рдИрдВ рдлрд░реНрдХрд┐рдиреБрд╣реБрдиреНрдЫ...

рдореЗрд░реЛ рд╕рдореНрдкреВрд░реНрдг рд╣реГрджрдпрдмрд╛рдЯ,
рддрдкрд╛рдИрдВрдХреЛ рд╕рджрд╛рдХреЛ рдорд╛рдпрд╛рд▓реБ рдкрддрд┐ ЁЯТСЁЯСлЁЯТНЁЯТЦтЬитЭдя╕ПЁЯМ╣ЁЯМЩЁЯХКя╕ПЁЯТМ`
      },
      hi: {
        headerSubtitle: "рддрд╛рд░реЛрдВ рдореЗрдВ рд▓рд┐рдЦреА рдЧрдИ рдкреНрд░реЗрдо рдХрд╣рд╛рдиреА тЬи",
        timerSubtitle: "ЁЯХ░я╕П рдореЗрд░реЗ рджрд┐рд▓ рдиреЗ рдЖрдкрдХреЗ рд▓рд┐рдП рдХрд┐рддрдирд╛ рд╕рдордп рдЗрдВрддрдЬрд╛рд░ рдХрд┐рдпрд╛ рд╣реИ",
        letterTitle: "ЁЯТМ рдкрддреНрд░ рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ ЁЯТМ",
        letterHeader: "ЁЯТЦ рдореЗрд░реЗ рджрд┐рд▓ рд╕реЗ рдкрддреНрд░ ЁЯТЦ",
        memoriesTitle: "ЁЯУ╕ рд╣рдорд╛рд░реА рд╕реБрдВрджрд░ рдпрд╛рджреЗрдВ",
        uploadTitle: "ЁЯУ╖ рдФрд░ рдпрд╛рджреЗрдВ рдЬреЛрдбрд╝реЗрдВ",
        uploadSubtitle: "рд╣рдорд╛рд░реЗ рд╕рд╛рде рдФрд░ рд╕реБрдВрджрд░ рдкрд▓ рд╕рд╛рдЭрд╛ рдХрд░реЗрдВ",
        uploadBtnText: "рддрд╕реНрд╡реАрд░реЗрдВ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ",
        footerText: "тЬи рдЕрд╕реАрдорд┐рдд тЭдя╕П рд╕реЗ рдмрдирд╛рдпрд╛ рдЧрдпрд╛ тАФ рдореИрдВ рдПрдХ рджрд┐рди рдФрд░ рд▓рдВрдмрд╛ рдЗрдВрддрдЬрд╛рд░ рдХрд░реВрдВрдЧрд╛ред тЬи",
        letterText: `ЁЯР╝ЁЯжЬЁЯМ╣ рдореИрдВ рдЖрдкрд╕реЗ рдЕрднреА рднреА рджрд┐рд▓ рднрд░ рдХреЗ рдкреНрдпрд╛рд░ рдХрд░рддрд╛ рд╣реВрдВред
рдЖрдк рдореЗрд░реА рджреБрдирд┐рдпрд╛ рд╣реИрдВ...
ЁЯЩП рдореИрдВрдиреЗ рдХреА рдЧрдИ рд╕рднреА рдЧрд▓рддрд┐рдпреЛрдВ рдХреЗ рд▓рд┐рдП рдореИрдВ рджрд┐рд▓ рд╕реЗ рдорд╛рдлреА рдорд╛рдВрдЧрддрд╛ рд╣реВрдВред
рдореИрдВ рдЖрдкрдХреА рдЦреБрд╢реА рдореЗрдВ рдЦреБрд╢реА рдордирд╛рддрд╛ рд╣реВрдВ...
ЁЯХпя╕П рдореИрдВ рдЖрдкрд╕реЗ рдЗрддрдирд╛ рдкреНрдпрд╛рд░ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ...
ЁЯТЦ рдореИрдВ рдЪрд╛рд╣рддрд╛ рд╣реВрдВ рдХрд┐ рдПрдХ рджрд┐рди рдЖрдк рд╡рд╛рдкрд╕ рдЖрдПрдВ...

рдореЗрд░реЗ рдкреВрд░реЗ рджрд┐рд▓ рд╕реЗ,
рдЖрдкрдХрд╛ рд╣рдореЗрд╢рд╛ рдХрд╛ рдкреНрдпрд╛рд░ рдХрд░рдиреЗ рд╡рд╛рд▓рд╛ рдкрддрд┐ ЁЯТСЁЯСлЁЯТНЁЯТЦтЬитЭдя╕ПЁЯМ╣ЁЯМЩЁЯХКя╕ПЁЯТМ`
      },
      es: {
        headerSubtitle: "Una historia de amor escrita en las estrellas тЬи",
        timerSubtitle: "ЁЯХ░я╕П Tiempo desde que mi coraz├│n comenz├│ a esperarte",
        letterTitle: "ЁЯТМ Haz clic en la carta ЁЯТМ",
        letterHeader: "ЁЯТЦ Carta desde mi coraz├│n ЁЯТЦ",
        memoriesTitle: "ЁЯУ╕ Nuestros hermosos recuerdos",
        uploadTitle: "ЁЯУ╖ Agregar m├бs recuerdos",
        uploadSubtitle: "Comparte m├бs momentos hermosos con nosotros",
        uploadBtnText: "Subir fotos",
        footerText: "тЬи Hecho con infinito тЭдя╕П тАФ Esperar├й un d├нa m├бs que para siempre. тЬи",
        letterText: `ЁЯР╝ЁЯжЬЁЯМ╣ Todav├нa te amo con todo mi coraz├│n.
Eres mi mundo...
ЁЯЩП Me disculpo de coraz├│n por todos los errores que he cometido.
Me alegro en tu felicidad...
ЁЯХпя╕П Puedo amarte tanto...
ЁЯТЦ Quiero que un d├нa regreses...

Con todo mi coraz├│n,
Tu esposo que te ama para siempre ЁЯТСЁЯСлЁЯТНЁЯТЦтЬитЭдя╕ПЁЯМ╣ЁЯМЩЁЯХКя╕ПЁЯТМ`
      },
      fr: {
        headerSubtitle: "Une histoire d'amour ├йcrite dans les ├йtoiles тЬи",
        timerSubtitle: "ЁЯХ░я╕П Temps ├йcoul├й depuis que mon c┼Уur a commenc├й ├а t'attendre",
        calculatorTitle: "ЁЯТХ Calculateur d'Amour ЁЯТХ",
        quotesTitle: "ЁЯТн Citations d'Amour ЁЯТн",
        letterTitle: "ЁЯТМ Cliquez sur la lettre ЁЯТМ",
        letterHeader: "ЁЯТЦ Lettre de mon c┼Уur ЁЯТЦ",
        memoriesTitle: "ЁЯУ╕ Nos beaux souvenirs",
        uploadTitle: "ЁЯУ╖ Ajouter plus de souvenirs",
        uploadSubtitle: "Partagez plus de beaux moments avec nous",
        uploadBtnText: "T├йl├йcharger des photos",
        footerText: "тЬи Fait avec un amour infini тЭдя╕П тАФ J'attendrai un jour de plus que pour toujours. тЬи",
        letterText: `ЁЯР╝ЁЯжЬЁЯМ╣ Je t'aime encore de tout mon c┼Уur.
Tu es mon monde...
ЁЯЩП Je m'excuse de tout c┼Уur pour toutes les erreurs que j'ai commises.
Je me r├йjouis de ton bonheur...
ЁЯХпя╕П Je peux t'aimer tant...
ЁЯТЦ Je veux qu'un jour tu reviennes...

De tout mon c┼Уur,
Ton mari qui t'aime pour toujours ЁЯТСЁЯСлЁЯТНЁЯТЦтЬитЭдя╕ПЁЯМ╣ЁЯМЩЁЯХКя╕ПЁЯТМ`
      },
      zh: {
        headerSubtitle: "хЖЩхЬицШЯцШЯщЗМчЪДчИ▒цГЕцХЕф║Л тЬи",
        timerSubtitle: "ЁЯХ░я╕П цИСчЪДх┐Гх╝АхзЛчнЙх╛Еф╜ачЪДцЧ╢щЧ┤",
        calculatorTitle: "ЁЯТХ чИ▒цГЕшобчоЧхЩи ЁЯТХ",
        quotesTitle: "ЁЯТн чИ▒цГЕхРНшиА ЁЯТн",
        letterTitle: "ЁЯТМ чВ╣хЗ╗ф┐бф╗╢ ЁЯТМ",
        letterHeader: "ЁЯТЦ цЭешЗкцИСхЖЕх┐ГчЪДф┐б ЁЯТЦ",
        memoriesTitle: "ЁЯУ╕ цИСф╗мч╛Охе╜чЪДхЫЮх┐Ж",
        uploadTitle: "ЁЯУ╖ ц╖╗хКацЫ┤хдЪхЫЮх┐Ж",
        uploadSubtitle: "ф╕ОцИСф╗мхИЖф║лцЫ┤хдЪч╛Охе╜цЧ╢хИ╗",
        uploadBtnText: "ф╕Кф╝ачЕзчЙЗ",
        footerText: "тЬи чФицЧащЩРчЪДчИ▒хИ╢ф╜Ь тЭдя╕П тАФ цИСф╝ЪчнЙх╛ЕцпФц░╕ш┐ЬхдЪф╕АхдйуАВ тЬи",
        letterText: `ЁЯР╝ЁЯжЬЁЯМ╣ цИСф╗НчД╢хЕих┐ГхЕицДПхЬ░чИ▒чЭАф╜ауАВ
ф╜ацШпцИСчЪДф╕ЦчХМ...
ЁЯЩП цИСф╕║цИСчКпф╕ЛчЪДцЙАцЬЙщФЩшппц╖▒шбицнЙцДПуАВ
цИСф╕║ф╜ачЪДх╣╕чжПшАМщлШхЕ┤...
ЁЯХпя╕П цИСхПпф╗ехжВцндчИ▒ф╜а...
ЁЯТЦ цИСх╕МцЬЫцЬЙф╕Ахдйф╜ахЫЮцЭе...

хЕих┐ГхЕицДПхЬ░я╝М
ц░╕ш┐ЬчИ▒ф╜ачЪДф╕Ихдл ЁЯТСЁЯСлЁЯТНЁЯТЦтЬитЭдя╕ПЁЯМ╣ЁЯМЩЁЯХКя╕ПЁЯТМ`
      },
      ja: {
        headerSubtitle: "цШЯуБлцЫ╕уБЛуВМуБЯцДЫуБочЙйшкЮ тЬи",
        timerSubtitle: "ЁЯХ░я╕П чзБуБох┐ГуБМуБВуБкуБЯуВТх╛ЕуБбхзЛуВБуБжуБЛуВЙуБоцЩВщЦУ",
        calculatorTitle: "ЁЯТХ цДЫуБошиИчоЧцйЯ ЁЯТХ",
        quotesTitle: "ЁЯТн цДЫуБохРНшиА ЁЯТн",
        letterTitle: "ЁЯТМ цЙЛч┤ЩуВТуВпуГкуГГуВп ЁЯТМ",
        letterHeader: "ЁЯТЦ чзБуБох┐ГуБЛуВЙуБоцЙЛч┤Щ ЁЯТЦ",
        memoriesTitle: "ЁЯУ╕ чзБуБЯуБбуБоч╛ОуБЧуБДцАЭуБДхЗ║",
        uploadTitle: "ЁЯУ╖ цАЭуБДхЗ║уВТш┐╜хКа",
        uploadSubtitle: "уВИуВКхдЪуБПуБоч╛ОуБЧуБДчЮмщЦУуВТхЕ▒цЬЙуБЧуБ╛уБЧуВЗуБЖ",
        uploadBtnText: "хЖЩчЬЯуВТуВвуГГуГЧуГнуГ╝уГЙ",
        footerText: "тЬи чДбщЩРуБоцДЫуБзф╜ЬуВЙуВМуБ╛уБЧуБЯ тЭдя╕П тАФ ц░╕щБауВИуВКф╕АцЧещХ╖уБПх╛ЕуБбуБ╛уБЩуАВ тЬи",
        letterText: `ЁЯР╝ЁЯжЬЁЯМ╣ чзБуБпуБ╛уБах┐ГуБЛуВЙуБВуБкуБЯуВТцДЫуБЧуБжуБДуБ╛уБЩуАВ
уБВуБкуБЯуБпчзБуБоф╕ЦчХМуБзуБЩ...
ЁЯЩП чзБуБМчКпуБЧуБЯуБЩуБ╣уБжуБощБОуБбуБлуБдуБДуБжх┐ГуБЛуВЙшмЭч╜куБЧуБ╛уБЩуАВ
чзБуБпуБВуБкуБЯуБох╣╕уБЫуВТхЦЬуБ│уБ╛уБЩ...
ЁЯХпя╕П чзБуБпуБВуБкуБЯуВТуБиуБжуВВцДЫуБЩуВЛуБУуБиуБМуБзуБНуБ╛уБЩ...
ЁЯТЦ чзБуБпуБВуБкуБЯуБМуБДуБдуБЛцИ╗уБгуБжуБПуВЛуБУуБиуВТщбШуБгуБжуБДуБ╛уБЩ...

х┐ГуБЛуВЙуАБ
ц░╕щБауБлуБВуБкуБЯуВТцДЫуБЩуВЛхдл ЁЯТСЁЯСлЁЯТНЁЯТЦтЬитЭдя╕ПЁЯМ╣ЁЯМЩЁЯХКя╕ПЁЯТМ`
      },
      ko: {
        headerSubtitle: "ы│ДьЧР ьУ░ьЧмьзД ьВмыЮС ьЭ┤ьХ╝ъ╕░ тЬи",
        timerSubtitle: "ЁЯХ░я╕П ыВ┤ ызИьЭМьЭ┤ ыЛ╣ьЛаьЭД ъ╕░ыЛдыжмъ╕░ ьЛЬьЮСэХЬ ьЛЬъ░Д",
        calculatorTitle: "ЁЯТХ ьВмыЮС ъ│ДьВ░ъ╕░ ЁЯТХ",
        quotesTitle: "ЁЯТн ьВмыЮС ыкЕьЦ╕ ЁЯТн",
        letterTitle: "ЁЯТМ эО╕ьзАые╝ эБ┤ыжнэХШьД╕ьЪФ ЁЯТМ",
        letterHeader: "ЁЯТЦ ыВ┤ ызИьЭМьЧРьДЬ ьШи эО╕ьзА ЁЯТЦ",
        memoriesTitle: "ЁЯУ╕ ьЪ░ыжмьЭШ ьХДыжДыЛдьЪ┤ ь╢ФьЦ╡",
        uploadTitle: "ЁЯУ╖ ыНФ ызОьЭА ь╢ФьЦ╡ ь╢Фъ░А",
        uploadSubtitle: "ыНФ ызОьЭА ьХДыжДыЛдьЪ┤ ьИЬъ░ДьЭД ъ│╡ьЬаэХШьД╕ьЪФ",
        uploadBtnText: "ьВмьзД ьЧЕыбЬыУЬ",
        footerText: "тЬи ым┤эХЬэХЬ ьВмыЮСьЬ╝ыбЬ ызМыУдьЦ┤ьбМьК╡ыЛИыЛд тЭдя╕П тАФ ьШБьЫРы│┤ыЛд эХШыги ыНФ ъ╕░ыЛдыжмъ▓аьК╡ыЛИыЛд. тЬи",
        letterText: `ЁЯР╝ЁЯжЬЁЯМ╣ ыВШыКФ ьЧмьаДэЮИ ызИьЭМъ╗П ыЛ╣ьЛаьЭД ьВмыЮСэХйыЛИыЛд.
ыЛ╣ьЛаьЭА ыВ┤ ьД╕ъ│ДьЮЕыЛИыЛд...
ЁЯЩП ьаЬъ░А ьаАьзАые╕ ыкиыУа ьЛдьИШьЧР ыМАэХ┤ ызИьЭМьЬ╝ыбЬ ьВмъ│╝ыУЬыж╜ыЛИыЛд.
ыВШыКФ ыЛ╣ьЛаьЭШ эЦЙы│╡ьЭД ъ╕░ы╗РэХйыЛИыЛд...
ЁЯХпя╕П ыВШыКФ ыЛ╣ьЛаьЭД ъ╖╕ыаЗъ▓М ьВмыЮСэХа ьИШ ьЮИьК╡ыЛИыЛд...
ЁЯТЦ ыВШыКФ ыЛ╣ьЛаьЭ┤ ьЦ╕ьааъ░А ыПМьХДьШдъ╕░ые╝ ы░ФыЮНыЛИыЛд...

ызИьЭМьЭД ыЛдэХ┤,
ьШБьЫРэЮИ ыЛ╣ьЛаьЭД ьВмыЮСэХШыКФ ыВиэО╕ ЁЯТСЁЯСлЁЯТНЁЯТЦтЬитЭдя╕ПЁЯМ╣ЁЯМЩЁЯХКя╕ПЁЯТМ`
      }
    };

    let currentLanguage = 'en';

    // Initialize everything when page loads
    window.addEventListener('load', function() {
      // Show loading screen with clickable heart
      const loading = document.getElementById('loading');
      const loadingHeart = document.getElementById('loadingHeart');
      loading.style.display = 'flex';
      document.body.style.overflow = 'hidden';

      // Apply preferred language from URL or localStorage
      try {
        const params = new URLSearchParams(window.location.search);
        let preferredLang = params.get('lang') || localStorage.getItem('lang') || 'en';
        if (!translations[preferredLang]) preferredLang = 'en';
        changeLanguage(null, preferredLang);
        localStorage.setItem('lang', preferredLang);
      } catch (e) {}

      loadingHeart.addEventListener('mouseenter', function() {
        loadingHeart.style.transform = 'scale(1.2)';
      });
      loadingHeart.addEventListener('mouseleave', function() {
        loadingHeart.style.transform = 'scale(1)';
      });
      loadingHeart.addEventListener('click', function() {
        loading.style.display = 'none';
        document.body.style.overflow = '';
        // Play music and initialize after heart click
        initializeMusic();
        createFloatingElements();
        startTimer();
        initializePhotoUpload();
        initParticles();
        updateQuote();
        setInterval(updateQuote, 30000);
      }, { once: true });
    });

    // Create floating elements animation
    function createFloatingElements() {
      const container = document.getElementById('floatingElements');
      const elements = [
        { emoji: 'ЁЯР╝', class: 'panda' },
        { emoji: 'ЁЯжЬ', class: 'parrot' },
        { emoji: 'ЁЯМ╣', class: 'rose' },
        { emoji: 'ЁЯТЦ', class: 'heart' },
        { emoji: 'ЁЯТХ', class: 'heart' },
        { emoji: 'ЁЯТЧ', class: 'heart' },
        { emoji: 'ЁЯТУ', class: 'heart' },
        { emoji: 'ЁЯТЭ', class: 'heart' },
        { emoji: 'ЁЯТШ', class: 'heart' }
      ];
      
      setInterval(() => {
        const element = elements[Math.floor(Math.random() * elements.length)];
        const div = document.createElement('div');
        div.className = `floating-item ${element.class}`;
        div.textContent = element.emoji;
        div.style.left = Math.random() * 100 + '%';
        div.style.animationDuration = (Math.random() * 4 + 4) + 's';
        container.appendChild(div);
        
        setTimeout(() => {
          div.remove();
        }, 8000);
      }, 400);
    }

    

    // Theme toggle function
    function toggleTheme() {
      document.body.classList.toggle('dark-mode');
      const themeBtn = document.querySelector('.theme-toggle i');
      if (document.body.classList.contains('dark-mode')) {
        themeBtn.className = 'fas fa-sun';
      } else {
        themeBtn.className = 'fas fa-moon';
      }
    }

    // Love calculator function
    function calculateLove() {
      const name1 = document.getElementById('name1').value.trim();
      const name2 = document.getElementById('name2').value.trim();
      
      if (!name1 || !name2) {
        document.getElementById('loveResult').innerHTML = 'Please enter both names! ЁЯТХ';
        return;
      }
      
      // Special case for Anjan Lama and Roshan Shrestha
      const combinedNames = (name1 + ' ' + name2).toLowerCase();
      const reverseCombined = (name2 + ' ' + name1).toLowerCase();
      
      if (combinedNames.includes('anjan') && combinedNames.includes('roshan') ||
          combinedNames.includes('anjana') && combinedNames.includes('roshan') ||
          reverseCombined.includes('anjan') && reverseCombined.includes('roshan') ||
          reverseCombined.includes('anjana') && reverseCombined.includes('roshan')) {
        
        // Special result for Anjan and Roshan
        document.getElementById('loveResult').innerHTML = `
          <div style="font-size: 2rem; color: #ff6b9d; margin-bottom: 10px;">ЁЯТЦЁЯТЦЁЯТЦ 100% LOVE ЁЯТЦЁЯТЦЁЯТЦ</div>
          <div style="font-size: 1.5rem; color: #f39c12; margin-bottom: 10px;">ЁЯОЙ PERFECT PARTNER EVER! ЁЯОЙ</div>
          <div style="font-size: 1.3rem; color: #27ae60; margin-bottom: 10px;">ЁЯМЯ BEST FOR FUTURE! ЁЯМЯ</div>
          <div style="font-size: 1.2rem; color: #e74c3c; margin-bottom: 10px;">ЁЯПЖ CONGRATULATIONS! ЁЯПЖ</div>
          <div style="font-size: 1.1rem; color: #9b59b6;">You both are the BEST PARTNER! ЁЯТСЁЯСлЁЯТН</div>
          <div style="font-size: 1rem; color: #ff6b9d; margin-top: 10px;">ЁЯР╝ЁЯжЬЁЯМ╣ Forever Together ЁЯМ╣ЁЯжЬЁЯР╝</div>
        `;
        
        // Add special animation
        const resultDiv = document.getElementById('loveResult');
        resultDiv.style.animation = 'pulse 1s ease-in-out infinite';
        
        // Create celebration effect
        createCelebrationEffect();
        return;
      }
      
      // Regular love calculation algorithm
      const combined = (name1 + name2).toLowerCase();
      let loveScore = 0;
      
      // Calculate based on character codes and length
      for (let i = 0; i < combined.length; i++) {
        loveScore += combined.charCodeAt(i);
      }
      
      // Add some randomness and make it more realistic
      loveScore = (loveScore * 0.7 + Math.random() * 30) % 100;
      loveScore = Math.floor(loveScore);
      
      // Ensure minimum and maximum bounds
      loveScore = Math.max(10, Math.min(99, loveScore));
      
      let result = '';
      let emoji = '';
      
      if (loveScore >= 80) {
        result = 'Perfect Match! ЁЯТС';
        emoji = 'ЁЯТЦЁЯТЦЁЯТЦ';
      } else if (loveScore >= 60) {
        result = 'Great Love! ЁЯТХ';
        emoji = 'ЁЯТЦЁЯТЦ';
      } else if (loveScore >= 40) {
        result = 'Good Potential! ЁЯТЧ';
        emoji = 'ЁЯТЦ';
      } else {
        result = 'Friendship First! ЁЯМ╕';
        emoji = 'ЁЯМ╕';
      }
      
      document.getElementById('loveResult').innerHTML = 
        `${name1} + ${name2} = ${loveScore}% Love ${emoji}<br><small>${result}</small>`;
    }

    // Celebration effect for special couple
    function createCelebrationEffect() {
      // Create fireworks effect
      for (let i = 0; i < 20; i++) {
        setTimeout(() => {
          const firework = document.createElement('div');
          firework.innerHTML = 'ЁЯОЖ';
          firework.style.position = 'fixed';
          firework.style.left = Math.random() * window.innerWidth + 'px';
          firework.style.top = Math.random() * window.innerHeight + 'px';
          firework.style.fontSize = '2rem';
          firework.style.zIndex = '9999';
          firework.style.pointerEvents = 'none';
          firework.style.animation = 'fadeOut 2s ease-out forwards';
          document.body.appendChild(firework);
          
          setTimeout(() => {
            firework.remove();
          }, 2000);
        }, i * 100);
      }
      
      // Create confetti effect
      for (let i = 0; i < 50; i++) {
        setTimeout(() => {
          const confetti = document.createElement('div');
          confetti.innerHTML = ['ЁЯТЦ', 'ЁЯТХ', 'ЁЯТЧ', 'ЁЯТУ', 'ЁЯТЭ', 'ЁЯТШ', 'ЁЯМ╣', 'тЬи', 'ЁЯОЙ', 'ЁЯПЖ'][Math.floor(Math.random() * 10)];
          confetti.style.position = 'fixed';
          confetti.style.left = Math.random() * window.innerWidth + 'px';
          confetti.style.top = '-50px';
          confetti.style.fontSize = '1.5rem';
          confetti.style.zIndex = '9998';
          confetti.style.pointerEvents = 'none';
          confetti.style.animation = 'fallDown 3s ease-in forwards';
          document.body.appendChild(confetti);
          
          setTimeout(() => {
            confetti.remove();
          }, 3000);
        }, i * 50);
      }
    }

    // Love quotes
    const loveQuotes = [
      {
        text: `I loved with all my heart тЭдя╕П
Though the pain tore me apart ЁЯТФ
In the darkness, I fought to stay ЁЯМС
But the shadows took me away ЁЯМля╕П

I wished for light, for hope, for peace тЬиЁЯХКя╕П
A chance for all this pain to cease ЁЯШЮ
To those I loved, please understand ЁЯлВ
My struggle was more than you planned тЪб

If my journey ends too soon ЁЯМа
Look for me in the stars and moon ЁЯМЯЁЯМЩ
Remember me with love, not pain ЁЯХпя╕П
Until we meet in skies again тШБя╕ПЁЯТл`,
        author: "Roshan SHrestha"
      },
      {
        text: `My heart was full of love тЭдя╕П
Yet pain tore me like a dove ЁЯТФ
In shadows deep, I tried to fight ЁЯМС
But darkness claimed my fading light ЁЯМля╕П

I longed for peace, a gentle sigh тЬиЁЯХКя╕П
To lift me softly to the sky ЁЯШЮ
Please know my pain was real and true ЁЯлВ
My fight was more than you knew тЪб

If I leave before my time ЁЯМа
Find me where the stars still shine ЁЯМЯЁЯМЩ
Hold me close with tender grace ЁЯХпя╕П
Until we meet in that safe place тШБя╕ПЁЯТл`,
        author: "Roshan SHrestha"
      },
      {
        text: `I gave my love, my all, my soul тЭдя╕П
Though pain within took its toll ЁЯТФ
In darkest night, I tried to stay ЁЯМС
But shadows pulled my light away ЁЯМля╕П

I dreamed of hope, of brighter days тЬиЁЯХКя╕П
To end this ever-weary haze ЁЯШЮ
To those I love, please understand ЁЯлВ
My struggle was more than planned тЪб

If I go too soon from here ЁЯМа
Look for me in skies so clear ЁЯМЯЁЯМЩ
Remember me with love and light ЁЯХпя╕П
Until we reunite one night тШБя╕ПЁЯТл`,
        author: "Roshan SHrestha"
      },
      {
        text: `With all my heart, I loved so true тЭдя╕П
But pain inside just grew and grew ЁЯТФ
In shadows deep, I tried to stand ЁЯМС
But darkness took me by the hand ЁЯМля╕П

I wished for peace, for calm and rest тЬиЁЯХКя╕П
To free my soul and heal my chest ЁЯШЮ
Please understand my silent fight ЁЯлВ
My pain was hidden out of sight тЪб

If I leave before my day ЁЯМа
Find me where the stars will stay ЁЯМЯЁЯМЩ
Hold me in your heart's embrace ЁЯХпя╕П
Until we meet in that warm place тШБя╕ПЁЯТл`,
        author: "Roshan SHrestha"
      },
      {
        text: `My heart was full, my love sincere тЭдя╕П
But pain inside was always near ЁЯТФ
In darkest nights, I fought to stay ЁЯМС
But shadows slowly took my way ЁЯМля╕П

I prayed for light, for peace to find тЬиЁЯХКя╕П
To leave this sorrow far behind ЁЯШЮ
Please know my pain was deep and true ЁЯлВ
My battle was more than you knew тЪб

If I leave this world too soon ЁЯМа
Find me beneath the shining moon ЁЯМЯЁЯМЩ
Remember me with love, not grief ЁЯХпя╕П
Until we meet beyond belief тШБя╕ПЁЯТл`,
        author: "Roshan SHrestha"
      },
      {
        text: `I loved with all my heart and soul тЭдя╕П
Though pain inside took its toll ЁЯТФ
In darkest hours, I tried to fight ЁЯМС
But shadows stole away my light ЁЯМля╕П

I wished for peace, for quiet rest тЬиЁЯХКя╕П
To ease the ache inside my chest ЁЯШЮ
To those I loved, please understand ЁЯлВ
My struggle was more than planned тЪб

If my journey ends too soon ЁЯМа
Look for me in stars and moon ЁЯМЯЁЯМЩ
Hold me with love, not despair ЁЯХпя╕П
Until we meet beyond the air тШБя╕ПЁЯТл`,
        author: "Roshan SHrestha"
      },
      {
        text: `My heart was full of boundless love тЭдя╕П
Though pain weighed heavy from above ЁЯТФ
In darkest times, I fought to stay ЁЯМС
But shadows slowly pulled away ЁЯМля╕П

I longed for peace, a gentle light тЬиЁЯХКя╕П
To carry me beyond the night ЁЯШЮ
Please understand my silent pain ЁЯлВ
My battle was more than you'd explain тЪб

If I leave before my time ЁЯМа
Find me where the stars still shine ЁЯМЯЁЯМЩ
Remember me with tender care ЁЯХпя╕П
Until we meet beyond the air тШБя╕ПЁЯТл`,
        author: "Roshan SHrestha"
      },
      {
        text: `I gave my heart, I gave my all тЭдя╕П
Though darkness made me stumble and fall ЁЯТФ
In shadows deep, I tried to stay ЁЯМС
But night would not let me find my way ЁЯМля╕П

I prayed for light, for hope to shine тЬиЁЯХКя╕П
To heal the wounds, to make me fine ЁЯШЮ
Please know my pain was deep and true ЁЯлВ
My fight was more than you ever knew тЪб

If I leave this world too soon ЁЯМа
Find me under the silver moon ЁЯМЯЁЯМЩ
Hold me close with love, not grief ЁЯХпя╕П
Until we find eternal peace тШБя╕ПЁЯТл`,
        author: "Roshan SHrestha"
      },
      {
        text: `With all my heart, I loved so deep тЭдя╕П
Though pain inside would not let me sleep ЁЯТФ
In darkest hours, I fought to stay ЁЯМС
But shadows slowly took me away ЁЯМля╕П

I wished for peace, for gentle rest тЬиЁЯХКя╕П
To free my soul and ease my chest ЁЯШЮ
To those I love, please understand ЁЯлВ
My struggle was more than planned тЪб

If I go before my time ЁЯМа
Look for me in stars that shine ЁЯМЯЁЯМЩ
Remember me with love and light ЁЯХпя╕П
Until we meet beyond the night тШБя╕ПЁЯТл`,
        author: "Roshan SHrestha"
      },
      {
        text: `I loved you with my whole heart тЭдя╕П
Though pain tore my world apart ЁЯТФ
In darkness, I tried to hold on tight ЁЯМС
But shadows pulled me from the light ЁЯМля╕П

I wished for hope, for peace, for calm тЬиЁЯХКя╕П
To heal my soul and ease the harm ЁЯШЮ
Please understand my silent plea ЁЯлВ
My pain was more than you could see тЪб

If I leave this world too soon ЁЯМа
Find me beneath the glowing moon ЁЯМЯЁЯМЩ
Hold me in your heart with care ЁЯХпя╕П
Until we meet beyond the air тШБя╕ПЁЯТл`,
      
author: "Roshan SHrestha"
     }
     ];

    function updateQuote() {
      const randomQuote = loveQuotes[Math.floor(Math.random() * loveQuotes.length)];
      document.getElementById('quoteText').textContent = randomQuote.text;
      document.getElementById('quoteAuthor').textContent = `- ${randomQuote.author}`;
    }

    // Photo slideshow
    let currentSlideIndex = 0;
    const slides = document.querySelectorAll('.slideshow-slide');
    const dots = document.querySelectorAll('.slideshow-dot');

    function showSlide(n) {
      slides.forEach(slide => slide.classList.remove('active'));
      dots.forEach(dot => dot.classList.remove('active'));
      
      currentSlideIndex = (n - 1 + slides.length) % slides.length;
      slides[currentSlideIndex].classList.add('active');
      dots[currentSlideIndex].classList.add('active');
    }

    function currentSlide(n) {
      showSlide(n);
    }

    function nextSlide() {
      showSlide(currentSlideIndex + 2);
    }

    // Auto-advance slideshow
    setInterval(nextSlide, 5000);

    // Particle system
    function initParticles() {
      if (typeof particlesJS !== 'undefined') {
        particlesJS('particles-js', {
          particles: {
            number: {
              value: 80,
              density: {
                enable: true,
                value_area: 800
              }
            },
            color: {
              value: ['#ff6b9d', '#27ae60', '#e74c3c', '#f39c12']
            },
            shape: {
              type: 'circle'
            },
            opacity: {
              value: 0.5,
              random: false
            },
            size: {
              value: 3,
              random: true
            },
            line_linked: {
              enable: true,
              distance: 150,
              color: '#ff6b9d',
              opacity: 0.4,
              width: 1
            },
            move: {
              enable: true,
              speed: 2,
              direction: 'none',
              random: false,
              straight: false,
              out_mode: 'out',
              bounce: false
            }
          },
          interactivity: {
            detect_on: 'canvas',
            events: {
              onhover: {
                enable: true,
                mode: 'repulse'
              },
              onclick: {
                enable: true,
                mode: 'push'
              },
              resize: true
            }
          },
          retina_detect: true
        });
      }
    }

    // Calendar-accurate difference
    function getCalendarDiff(start, end) {
      let years = end.getFullYear() - start.getFullYear();
      let months = end.getMonth() - start.getMonth();
      let days = end.getDate() - start.getDate();
      let hours = end.getHours() - start.getHours();
      let minutes = end.getMinutes() - start.getMinutes();
      let seconds = end.getSeconds() - start.getSeconds();

      if (seconds < 0) {
        seconds += 60;
        minutes--;
      }
      if (minutes < 0) {
        minutes += 60;
        hours--;
      }
      if (hours < 0) {
        hours += 24;
        days--;
      }
      if (days < 0) {
        // Go to previous month
        let prevMonth = new Date(end.getFullYear(), end.getMonth(), 0);
        days += prevMonth.getDate();
        months--;
      }
      if (months < 0) {
        months += 12;
        years--;
      }
      return { years, months, days, hours, minutes, seconds };
    }

    // Timer functionality with persistent real-time counting
    function startTimer() {
      function getNepalTime() {
        // Use browser's Intl API for real Nepal time
        return new Date(new Date().toLocaleString('en-US', { timeZone: 'Asia/Kathmandu' }));
      }

      // Fetch timer_start.txt and parse start date
      fetch('timer_start.txt?v=' + Date.now())
        .then(res => res.text())
        .then(text => {
          let startDateStr = null;
          text.split('\n').forEach(line => {
            if (line.startsWith('start=')) startDateStr = line.split('=')[1].trim();
          });
          if (!startDateStr) {
            startDateStr = getNepalTime().toISOString().slice(0, 19);
          }
          let [datePart, timePart] = startDateStr.split('T');
          let [year, month, day] = datePart.split('-').map(Number);
          let [hour, minute, second] = (timePart || '00:00:00').split(':').map(Number);

          // Nepal is UTC+5:45, so create the start date in Nepal time
          const NEPAL_OFFSET_MIN = 5 * 60 + 45;
          const utcTimestamp = Date.UTC(year, month - 1, day, hour, minute, second) - (NEPAL_OFFSET_MIN * 60 * 1000);
          const startNepalTime = new Date(utcTimestamp);

          function startAccurateTimer(startNepalTime) {
            function updateTimer() {
              const now = getNepalTime();
              let diff = getCalendarDiff(startNepalTime, now);
              if (
                diff.years < 0 ||
                diff.months < 0 ||
                diff.days < 0 ||
                diff.hours < 0 ||
                diff.minutes < 0 ||
                diff.seconds < 0
              ) {
                diff = { years: 0, months: 0, days: 0, hours: 0, minutes: 0, seconds: 0 };
              } else {
                // Increment seconds by 1 to match the real clock
                diff.seconds += 1;
                if (diff.seconds === 60) {
                  diff.seconds = 0;
                  diff.minutes += 1;
                  if (diff.minutes === 60) {
                    diff.minutes = 0;
                    diff.hours += 1;
                    if (diff.hours === 24) {
                      diff.hours = 0;
                      diff.days += 1;
                      // Optionally, normalize days/months/years further if needed
                    }
                  }
                }
              }
              document.getElementById('timer').innerHTML =
                `тП│ ${diff.years} Year ЁЯМЯ ${diff.months} Month ЁЯУЕ ${diff.days} Day тП░ ${diff.hours} Hour ЁЯХР ${diff.minutes} Minute тП▒ ${diff.seconds} Second and counting...`;

              // Calculate ms until the next full second
              const msToNextSecond = 1000 - now.getMilliseconds();
              setTimeout(updateTimer, msToNextSecond);
            }
            updateTimer();
          }

          startAccurateTimer(startNepalTime);
        });
    }

    // Show nickname question modal before letter
    function showLetter() {
      document.getElementById('nicknameInput').value = '';
      document.getElementById('nicknameError').textContent = '';
      document.getElementById('nicknameModal').style.display = 'block';
    }

    function closeNicknameModal() {
      document.getElementById('nicknameModal').style.display = 'none';
    }

    function checkNickname() {
      const input = document.getElementById('nicknameInput').value.trim().toLowerCase();
      if (input === 'koila') {
        closeNicknameModal();
        openLetter();
      } else {
        document.getElementById('nicknameError').textContent = 'Remember sweetheart тЭдЁЯТХЁЯМ╣';
      }
    }

    function openLetter() {
      const text = translations[currentLanguage].letterText;
      const modal = document.getElementById('letterModal');
      const letterText = document.getElementById('letterText');
      modal.style.display = 'block';
      letterText.innerHTML = '';
      let i = 0;
      const typing = setInterval(() => {
        if (i < text.length) {
          letterText.innerHTML += text[i] === '\n' ? '<br>' : text[i];
          i++;
        } else {
          clearInterval(typing);
        }
      }, 50);
    }

    function closeLetter() {
      document.getElementById('letterModal').style.display = 'none';
    }

    // Photo modal functionality
    function openPhotoModal(src) {
      document.getElementById('modalImage').src = src;
      document.getElementById('photoModal').style.display = 'block';
    }

    function closePhotoModal() {
      document.getElementById('photoModal').style.display = 'none';
    }

    // Music functionality
    function initializeMusic() {
      const music = document.getElementById('bgMusic');
      const toggleBtn = document.getElementById('musicToggle');
      const volumeSlider = document.getElementById('volumeControl');
      const prevBtn = document.getElementById('prevTrackBtn');
      const nextBtn = document.getElementById('nextTrackBtn');
      const trackTitle = document.getElementById('currentTrackTitle');
      // Hardcoded music tracks for static hosting (GitHub Pages compatible)
      let musicTracks = [
        { src: 'music/7%20years.mp3', title: '7 Years' },
        { src: 'music/Par%20khe%20ra%20.mp3', title: 'Par khe ra' },
        { src: 'music/Thu%20Hea%20Kha.mp3', title: 'Thu Hea Kha' }
      ];
      window.musicTracks = musicTracks;
      window.currentTrackIndex = 0;
      function loadTrack(index, autoPlay = true) {
        if (!musicTracks[index]) {
          trackTitle.textContent = 'No songs found';
          music.src = '';
          return;
        }
        music.src = musicTracks[index].src;
        trackTitle.textContent = musicTracks[index].title;
        music.load();
        localStorage.setItem('lastMusicIndex', index);
        if (autoPlay) {
          music.play().catch(()=>{});
        }
      }
      // Set initial volume
      music.volume = 0.5;
      // Volume control
      volumeSlider.addEventListener('input', function() {
        music.volume = this.value;
      });
      // Update icon based on music state
      function updateMusicIcon() {
        if (music.paused) {
          toggleBtn.innerHTML = '<i class="fas fa-play"></i>';
        } else {
          toggleBtn.innerHTML = '<i class="fas fa-pause"></i>';
        }
        if (window.musicTracks && window.currentTrackIndex !== undefined && window.musicTracks[window.currentTrackIndex]) {
          trackTitle.textContent = window.musicTracks[window.currentTrackIndex].title;
        } else {
          trackTitle.textContent = 'No songs found';
        }
      }
      // Listen for play/pause events to update icon
      music.addEventListener('play', updateMusicIcon);
      music.addEventListener('pause', updateMusicIcon);
      // Next/Prev track
      window.playNextTrack = function() {
        if (!musicTracks.length) return;
        window.currentTrackIndex = (window.currentTrackIndex + 1) % musicTracks.length;
        loadTrack(window.currentTrackIndex, true);
        updateMusicIcon();
      };
      window.playPrevTrack = function() {
        if (!musicTracks.length) return;
        window.currentTrackIndex = (window.currentTrackIndex - 1 + musicTracks.length) % musicTracks.length;
        loadTrack(window.currentTrackIndex, true);
        updateMusicIcon();
      };
      // Initial icon and track (pick random on each load)
      if (musicTracks.length > 0) {
        window.currentTrackIndex = Math.floor(Math.random() * musicTracks.length);
        loadTrack(window.currentTrackIndex, true);
        updateMusicIcon();
      } else {
        trackTitle.textContent = 'No songs found';
      }
    }

    // Single button to play/pause music
    function toggleMusicPlayPause() {
      const music = document.getElementById('bgMusic');
      const toggleBtn = document.getElementById('musicToggle');
      if (music.paused) {
        music.play().then(() => {
          toggleBtn.innerHTML = '<i class=\'fas fa-pause\'></i>';
        });
      } else {
        music.pause();
        toggleBtn.innerHTML = '<i class=\'fas fa-play\'></i>';
      }
      // Always update the song title
      const trackTitle = document.getElementById('currentTrackTitle');
      if (window.currentTrackIndex !== undefined && window.musicTracks) {
        trackTitle.textContent = window.musicTracks[window.currentTrackIndex].title;
      }
    }

    // Called by overlay button
    function playMusicFromOverlay() {
      const music = document.getElementById('bgMusic');
      const musicOverlay = document.getElementById('musicOverlay');
      music.play().then(() => {
        musicOverlay.style.display = 'none';
      });
    }

    // Photo upload functionality
    function initializePhotoUpload() {
      document.getElementById('photoInput').addEventListener('change', function(e) {
        const grid = document.getElementById('photoGrid');
        const files = Array.from(e.target.files);
        
        files.forEach(file => {
          if (file.type.startsWith('image/')) {
            const reader = new FileReader();
            reader.onload = function(event) {
              const photoItem = document.createElement('div');
              photoItem.className = 'photo-item';
              photoItem.innerHTML = `
                <img src="${event.target.result}" alt="Uploaded Memory" onclick="openPhotoModal('${event.target.result}')">
                <div class="photo-overlay">
                  <h3>New Memory</h3>
                  <p>Added with love</p>
                </div>
              `;
              grid.appendChild(photoItem);
              
              // Add animation
              photoItem.style.opacity = '0';
              photoItem.style.transform = 'scale(0.8)';
              setTimeout(() => {
                photoItem.style.transition = 'all 0.5s ease';
                photoItem.style.opacity = '1';
                photoItem.style.transform = 'scale(1)';
              }, 100);
            };
            reader.readAsDataURL(file);
          }
        });
      });
    }

    // Close modals when clicking outside
    window.addEventListener('click', function(e) {
      const letterModal = document.getElementById('letterModal');
      const photoModal = document.getElementById('photoModal');
      
      if (e.target === letterModal) {
        closeLetter();
      }
      if (e.target === photoModal) {
        closePhotoModal();
      }
    });

    // Add interactive effects
    document.addEventListener('mousemove', function(e) {
      const elements = document.querySelectorAll('.floating-item');
      elements.forEach(element => {
        const rect = element.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;
        
        if (Math.abs(x) < 60 && Math.abs(y) < 60) {
          element.style.transform = 'scale(1.8) rotate(10deg)';
        }
      });
    });

    // Sound effects
    function playClickSound() {
      const clickSound = document.getElementById('clickSound');
      clickSound.currentTime = 0;
      clickSound.play().catch(() => {});
    }

    function playHoverSound() {
      const hoverSound = document.getElementById('hoverSound');
      hoverSound.currentTime = 0;
      hoverSound.play().catch(() => {});
    }

    // Add sound effects to interactive elements
    document.addEventListener('DOMContentLoaded', function() {
      const interactiveElements = document.querySelectorAll('button, .envelope, .photo-item, .lang-btn, .theme-toggle');
      interactiveElements.forEach(el => {
        el.addEventListener('click', playClickSound);
        el.addEventListener('mouseenter', playHoverSound);
      });
    });

    // Function to reset timer (for testing purposes)
    function resetTimer() {
      localStorage.removeItem('loveStartTime');
      location.reload();
    }

    // Function to show current Nepal time
    function showNepalTime() {
      function getNepalTime() {
        // Use browser's Intl API for real Nepal time
        return new Date(new Date().toLocaleString('en-US', { timeZone: 'Asia/Kathmandu' }));
      }
      
      const nepalTime = getNepalTime();
      alert(`Current Nepal Time: ${nepalTime.toLocaleString('en-US', { timeZone: 'Asia/Kathmandu' })}`);
    }

    // Add these functions to window for debugging (optional)
    window.resetTimer = resetTimer;
    window.showNepalTime = showNepalTime;

    // Ensure all translation keys exist for all languages
    const allKeys = [
      'headerSubtitle', 'timerSubtitle', 'calculatorTitle', 'quotesTitle', 'letterTitle', 'letterHeader',
      'memoriesTitle', 'uploadTitle', 'uploadSubtitle', 'uploadBtnText', 'footerText', 'letterText'
    ];
    Object.keys(translations).forEach(lang => {
      allKeys.forEach(key => {
        if (!translations[lang][key]) {
          translations[lang][key] = translations['en'][key] || '';
        }
      });
    });

    // Toggle language selector
    function toggleLanguageSelector() {
      const selector = document.getElementById('languageSelector');
      selector.style.display = selector.style.display === 'none' ? 'flex' : 'none';
    }

    // Improved language change function
    function changeLanguage(event, lang) {
      currentLanguage = lang;
      const langBtns = document.querySelectorAll('.lang-btn');
      langBtns.forEach(btn => btn.classList.remove('active'));
      if (event && event.currentTarget) event.currentTarget.classList.add('active');
      // Update all text elements
      allKeys.forEach(key => {
        const el = document.getElementById(key);
        if (el) el.textContent = translations[lang][key];
      });
      // Hide selector after choosing
      document.getElementById('languageSelector').style.display = 'none';
      // Persist language and reflect in URL
      try {
        localStorage.setItem('lang', lang);
        const url = new URL(window.location);
        url.searchParams.set('lang', lang);
        history.replaceState({}, '', url);
      } catch (e) {}
    }

    // Play music directly from button
    function playMusicDirect() {
      const music = document.getElementById('bgMusic');
      const toggleBtn = document.getElementById('musicToggle');
      music.play().then(() => {
        toggleBtn.innerHTML = '<i class="fas fa-music"></i>';
      });
    }
  